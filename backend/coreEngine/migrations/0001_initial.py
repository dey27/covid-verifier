# Generated by Django 3.2 on 2021-04-25 06:48

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('post_id', models.AutoField(help_text='Auto-Generated Id', primary_key=True, serialize=False)),
                ('post_name', models.CharField(help_text='Name of concerned persons, institution, shop etc to be filled here.', max_length=50)),
                ('phone_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=13), help_text='List of comma-separated phone numbers', size=8)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('location_city', models.CharField(help_text='Name of city', max_length=30)),
                ('location_area', models.CharField(blank=True, help_text='Specific area within the city', max_length=30, null=True)),
                ('supporting_url', models.URLField(blank=True, help_text='Any supporting links for the post.', max_length=500, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date created in the Database')),
                ('labels', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('vote_id', models.AutoField(help_text='Auto-Generated Id', primary_key=True, serialize=False)),
                ('up_vote', models.BooleanField(blank=True, help_text='Vote Up if the post is helpful.', null=True)),
                ('down_vote', models.BooleanField(blank=True, help_text='Vote Down if the post is helpful.', null=True)),
                ('note', models.TextField(blank=True, max_length=20, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date created in the Database')),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('post', models.ForeignKey(help_text='Foreign key to posts.', on_delete=django.db.models.deletion.CASCADE, to='coreEngine.posts')),
            ],
            options={
                'ordering': ['date_created'],
            },
        ),
    ]
